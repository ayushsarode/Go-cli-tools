package main

import (
    "encoding/json"
    "fmt"
    "io"
    "net/http"
    "os"
)

const API_KEY = "615d8d6e3918e80ee4a08c7abf243852"
const BASE_URL = "https://api.openweathermap.org/data/2.5/weather"



type WeatherResponse struct {
    Name string `json:"name"`
    Main struct {
        Temp float64 `json:"temp"`
    } `json:"main"`
    Weather []struct {
        Description string `json:"description"`
    } `json:"weather"`
}

func getWeather(city string) {
    url := fmt.Sprintf("%s?q=%s&appid=%s&units=metric", BASE_URL, city, API_KEY)
    resp, err := http.Get(url)
    if err != nil {
        fmt.Println("Error:", err)
        return
    }
    defer resp.Body.Close()

    body, err := io.ReadAll(resp.Body)
    if err != nil {
        fmt.Println("Error:", err)
        return
    }

    var weatherData WeatherResponse
    if err := json.Unmarshal(body, &weatherData); err != nil {
        fmt.Println("Error parsing JSON:", err)
        return
    }

    fmt.Printf("Weather in %s: %s, %.2fÂ°C\n", weatherData.Name, weatherData.Weather[0].Description, weatherData.Main.Temp)
}

func main() {
    if len(os.Args) < 2 {
        fmt.Println("Usage: go run main.go <city>")
        return
    }
    city := os.Args[1]
    getWeather(city)
}